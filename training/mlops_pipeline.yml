# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  workflow_dispatch:
    branches: ["main"]
  push:
    branches: ["main"]

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Pre processing
      run: |-
        python src/preprocess_script.py --config=params.yml --input_csv=data/source/ticket_type.csv  --training_columns=short_desc --target_column=ticket_type
    - name: Train and Evaluate
      run: |-
        mlflow db upgrade sqlite:///mlflow.db
        mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./artifacts --host 127.0.0.1 -p 1234 & disown
        python src/training.py --config=params.yml --input_csv=data/source/ticket_type.csv  --training_columns=short_desc --target_column=ticket_type --model_path=saved_models/model.joblib --train_size=0.888
        fuser -k 1234/tcp
    #- name: Test with pytest
    #  run: |
    #    pytest
    - name: Commit report
      run: |
        # commit new trained model in mlflow db
        git config --global user.name 'Niket Zagade'
        git config --global user.email 'niket.zagade@atos.net'
        git add .
        git commit -m "Automated report"
        git push

